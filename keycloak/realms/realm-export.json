[
  {
    "id": "master",
    "realm": "master",
    "displayName": "Keycloak",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 60,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 600,
    "enabled": true,
    "sslRequired": "none",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "49af5940-b45f-440d-94cb-b6f356b10196",
          "name": "create-realm",
          "description": "${role_create-realm}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "59867709-4393-450a-91a4-71c9119c63df",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "e6260294-d7ec-4acb-8c99-f9d8d323c31e",
          "name": "admin",
          "description": "${role_admin}",
          "composite": true,
          "composites": {
            "realm": [
              "create-realm"
            ],
            "client": {
              "master-realm": [
                "create-client",
                "view-authorization",
                "manage-events",
                "manage-realm",
                "view-realm",
                "query-clients",
                "query-realms",
                "impersonation",
                "manage-authorization",
                "view-users",
                "view-clients",
                "view-identity-providers",
                "manage-clients",
                "query-groups",
                "view-events",
                "query-users",
                "manage-users",
                "manage-identity-providers"
              ],
              "IPC-realm": [
                "manage-authorization",
                "manage-clients",
                "manage-events",
                "view-authorization",
                "impersonation",
                "view-identity-providers",
                "view-realm",
                "query-groups",
                "view-events",
                "query-clients",
                "create-client",
                "view-users",
                "manage-identity-providers",
                "query-users",
                "manage-realm",
                "manage-users",
                "view-clients",
                "query-realms"
              ]
            }
          },
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "05f4b978-bc89-4272-9a5e-43dd1918d186",
          "name": "default-roles-master",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        },
        {
          "id": "b858f21c-b7de-421c-8c93-cc784865bc1c",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "master",
          "attributes": {}
        }
      ],
      "client": {
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "2ea320a0-5448-4e06-b688-99f5dc90ee03",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "871b0b43-78a7-4033-a61e-9d9ce221a42c",
            "attributes": {}
          }
        ],
        "master-realm": [
          {
            "id": "35951b5b-c13e-4de9-8372-d76e161cd8f1",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "2de609c2-cea1-442b-81a8-ed7820efdaab",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "e107cbaa-594f-4049-8897-6273d439b04a",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "720f94c5-92d4-44f0-a98c-20efd44c40ba",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "bc1221db-e69e-4a3f-911a-c5c307e30eb8",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "master-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "cedd6d06-2483-48a4-b0a6-f31f9a445fcd",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "5130d6ff-fa19-487f-942b-a166e72289e2",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "e24992e3-1e56-47de-a11f-8f76a7a91481",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "7ac02492-536b-4149-8e20-2d59297619d5",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "1496c8e0-0bb2-44ae-be7a-7483702024c7",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "dfad87fb-c124-457c-aa56-a6f4f7925967",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "6fe3698d-6f74-45c1-a54d-64e747f6596d",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "d77d7a69-3afd-43bb-8ed8-4731d60717c0",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "12be12e6-23e7-4958-946c-ce230531d40e",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "8db4d037-a59e-4666-959a-4a4c761b11c1",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "8deca46e-05a8-4270-9df9-b39b84258df5",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "63d6772b-46b8-4461-8a74-f01c73cd40c5",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          },
          {
            "id": "5eacb06c-38e1-496e-a52d-a5c836bdc27f",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "5829045e-b4fb-494f-8c99-615cd47189ea",
            "attributes": {}
          }
        ],
        "IPC-realm": [
          {
            "id": "fb9d1a35-3797-4009-bc03-7bd0222b4f22",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "1c1df131-f6db-4461-883d-62ed652507b1",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "f0a80456-33a9-490a-a40c-f039748e1829",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "ddd108e8-5a54-4059-bc5f-be10aa50e6e3",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "IPC-realm": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "ae77d7f2-aeba-48a9-a0ac-e8fa72e17d05",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "0f1f1bce-b103-4db4-a40c-37a864b2128f",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "3d83978e-9850-4b55-8835-d915c4719943",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "a4bab815-25ec-405f-adcb-4bb742b566cf",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "bf2f8130-bf65-4ab8-8595-e2bb9b7eea61",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "ea6d2cc4-a979-427d-968f-d99bd75a5171",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "9fc4a771-1964-4926-a5e1-470a38d27c0a",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "e10099bc-3da3-4096-8f83-4959c3513431",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "8ba4fb65-630c-4f1d-9821-321e1b9e3ab6",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "90bda6bc-16e9-42d1-bf2b-90074da32b8c",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "00594bef-dfb2-48d7-8c17-93a99cdf87d4",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "IPC-realm": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "44af1ec9-f591-486e-b254-9c3894f4f035",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "64796357-cc99-41f0-89f8-375087958885",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          },
          {
            "id": "a8ead744-2f95-4bf7-8765-c8c14d90d993",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "79d7a045-7e0a-4dea-b1fe-de4509183d50",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "26e7396a-9fd8-4bae-8748-eeb94a59655c",
            "attributes": {}
          },
          {
            "id": "eafa42f2-fc45-4875-8499-b071c2f97144",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "26e7396a-9fd8-4bae-8748-eeb94a59655c",
            "attributes": {}
          },
          {
            "id": "8126746e-89b2-4af7-8d82-1a863d77233d",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "26e7396a-9fd8-4bae-8748-eeb94a59655c",
            "attributes": {}
          },
          {
            "id": "d118aa6c-cd22-4e5c-8db5-ea09485dd7ba",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "26e7396a-9fd8-4bae-8748-eeb94a59655c",
            "attributes": {}
          },
          {
            "id": "4ede5111-9faa-4662-9443-26efdfbc2281",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "26e7396a-9fd8-4bae-8748-eeb94a59655c",
            "attributes": {}
          },
          {
            "id": "cbc764f3-fd50-4712-a7c4-95034e1b4d42",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "26e7396a-9fd8-4bae-8748-eeb94a59655c",
            "attributes": {}
          },
          {
            "id": "dbb71a70-1266-4410-b564-704bf5cd917e",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "26e7396a-9fd8-4bae-8748-eeb94a59655c",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "05f4b978-bc89-4272-9a5e-43dd1918d186",
      "name": "default-roles-master",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "master"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "f27204da-a4fb-4ac7-87aa-ac4af82cb1d7",
        "createdTimestamp": 1636564881962,
        "username": "service-account-admin-cli",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "admin-cli",
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-master",
          "admin"
        ],
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "26e7396a-9fd8-4bae-8748-eeb94a59655c",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "aa2cf068-e962-454d-8d0e-3118a2163afe",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/master/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/master/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "59b21ca4-1eca-494d-9c47-2b852fee112a",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "8ed51f44-2712-4edd-96a0-d7978cac04ed",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "74d9e5a6-2933-48b6-bcab-10361bfc3e22",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "saml.server.signature": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "false",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "8644b9d1-a074-402d-86fd-657a672a8c12",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "404d7786-fa3b-447d-b94e-0b67e921997b",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "59a57e73-2ac3-4fec-ac20-83fafff5d56c",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "871b0b43-78a7-4033-a61e-9d9ce221a42c",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "9bd01967-ed5a-4398-a6d8-d02d7945248f",
        "clientId": "IPC-realm",
        "name": "IPC Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      },
      {
        "id": "5829045e-b4fb-494f-8c99-615cd47189ea",
        "clientId": "master-realm",
        "name": "master Realm",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "557fad3e-717e-42d8-be33-64ab35129e50",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/master/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/master/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "13a640de-757b-4545-a63e-200a7e1b9141",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "cb651a4f-83d8-4e41-8b72-1500976d6362",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "b3cea946-b498-43cc-b12f-8c2c9050afa4",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "a99ae88a-fe31-45bb-98e8-9f9257213355",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "3afa51d1-abc3-4ac9-8dc3-fd50cb3fbf8c",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "22800645-5c64-4250-8f03-a11ee7878ed9",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "3d5b3997-5a08-47f0-87ee-14a4a147bff5",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "fa7715c3-e73f-418a-b247-92940e285b86",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "651b5580-9b61-4b67-8e3e-5564f6a6f8aa",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "cdf69b81-0b56-439b-8c4c-dbc09b9e5bda",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "064fe84a-69a4-4a8b-b39e-850d77e7f19a",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8d158466-4cd8-496c-8ad8-b97253f14e97",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9c758cdc-ecdc-44c0-a0de-92f930d63a21",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "09be996b-af09-42d0-9dba-7925c63fe5ef",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e55b5ec3-cb6b-4a39-80d0-afc0e077ea37",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1e68c7fb-8569-427d-9fe9-72654b9ed7e2",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "33d8b8a5-fc66-49ba-98f8-35abe4a2335e",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9a9c459e-3a71-40fd-b285-4bf231e2e669",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "fd6f5b5a-c41c-4095-b802-5196895666a7",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6dfbfe25-6491-4098-af00-2e0ff0a80891",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "07531586-d6cb-4436-881e-23ba7254e138",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "a151a279-d68a-4a76-81ea-d52250a9ac3b",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "6c531f6b-5ba2-417e-b247-dcf38e1c0baf",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "1ad1ea23-246a-4138-afd0-4af3beff7640",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "93171311-ee68-4777-b538-f19dd047e2ab",
        "name": "dac:members",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "c4aca802-d4a1-4c55-a03b-94efd32d0397",
            "name": "mongo",
            "protocol": "openid-connect",
            "protocolMapper": "mongodb-scope-mapper",
            "consentRequired": false,
            "config": {
              "mongodb-query-text": "{\n  aggregate: \"dacs\",\n  pipeline: \n[{\n    $match: {\n        \"members\": { $eq: \"$$sub\" }\n    }\n}, {\n    $group: {\n        \"_id\": 0,\n        \"dac:members\": {\n            $push: { \"dacId\" : \"$$ROOT.dacId\", \"resources\":\"$$ROOT.files.fileId\" }\n        }\n    }\n}, \n{\n    $project: {\n        \"_id\": 0,\n        \"dac:members\": 1\n    }\n}]\n}",
              "mongodb-connection-uri": "mongodb://admin:password@172.21.0.1:27017/dac-portal-api?authSource=admin"
            }
          }
        ]
      },
      {
        "id": "8dd707e1-095f-4933-b554-2e96ba0eb483",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "9ecda824-e6a4-4c13-9211-efd0dfeb73a2",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "b90d5c20-9039-4bd2-9364-20748008772d",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "4b3e90ca-abbd-4c57-93f8-a733e778de3b",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "75bf115a-845b-499a-92f1-f46318e65099",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "5d9ef709-6fe9-4ccf-8f05-3301c968350b",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "6f32da85-0569-4c5f-a42b-2c3013460894",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "84603547-c217-4993-a605-18fa54be66fa",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "1475d945-558f-4362-84ef-4604376d3a1e",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1c5dde0e-5e52-41ea-b7ab-4a48bb0c7192",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "a8dd5a71-c2c8-459e-8bf0-2895bac8c651",
        "name": "dac:roles",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "c5ee7333-2ef2-4b84-bd1a-7a0710be5c15",
            "name": "mongo-dac-roles",
            "protocol": "openid-connect",
            "protocolMapper": "mongodb-scope-mapper",
            "consentRequired": false,
            "config": {
              "mongodb-query-text": "{\n  aggregate: \"userRoles\",\n  pipeline: \n[{\n    $match: {\n        \"sub\": { $eq: \"$$sub\" }\n    }\n}, {\n    $group: {\n        \"_id\": 0,\n        \"dac:roles\": {\n            $push: \"$$ROOT.roles\"\n        }\n    }\n}, \n{\n    $project: {\n        \"_id\": 0,\n        \"dac:roles\": 1\n    }\n}]\n}",
              "mongodb-connection-uri": "mongodb://admin:password@172.21.0.1:27017/dac-portal-api?authSource=admin"
            }
          }
        ]
      },
      {
        "id": "4b1f3bd9-b2ba-44bd-93a7-35b1580b7472",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "03ebcfcb-052b-4fbc-924f-0d861b2989f0",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "dac:members",
      "dac:roles"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "f19b5fa4-6574-4b2c-a8f2-369b1ad8b8d2",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "9d8961d5-456d-4970-aa12-c1f70c1db4d1",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "e1cc0a50-e94b-4d9f-97aa-2dfbc07a89a0",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper",
              "saml-user-attribute-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "7869cb5c-5bab-4c6d-b1fd-e73d51535bb2",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "e9ae1ffd-701e-4f4b-b0a7-7f82868f2405",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-attribute-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper"
            ]
          }
        },
        {
          "id": "f63ed2bb-97c2-4e7e-aa7e-c8336cc8f931",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "cdf31184-492a-4a15-ac82-e20b883edbcf",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "5d5bacf8-b74e-43b0-b6cb-ea5b397080fc",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "375aa04a-aa5b-4396-bc29-81726e83c8a8",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "468e8275-4e35-4a1c-9dd8-c0cb640fe063",
          "name": "rsa-enc-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "186c7a14-1e89-4156-974d-a6b8e321828d",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "b1721174-f57c-40b5-923e-3eb910382a64",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "cb029d85-e4fa-4acf-8e0e-39858da26981",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "3925a3b2-4bbc-440f-a8a7-39ff4a8130c4",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "64f96525-e5fb-4abd-8607-a2085810b83d",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "520011e0-093b-4506-8113-b3b25409cbf2",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "cd7f0afe-16bd-4864-9583-bb5116a9c421",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "4cc81d06-65a5-425b-89ee-a263f3de8a16",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "3938a2a9-510b-43bd-b2fe-b7856b0a5d7c",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "7d492138-6237-4a6e-b5d3-f09d7f472089",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "453b453d-2fa9-4aee-9323-28b3bfe32915",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "56c46870-37f7-4f6a-8b4a-35f74d58cf36",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "a077a7e8-6e19-47ab-98d2-d496f1246582",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "017ffb27-3b39-47b1-ad1e-4bf3b9c541a4",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "2753f696-4a05-44eb-9763-079d883aa9b3",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "6cd43515-955c-43fd-bfdf-d3779a988d6a",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "4b93b4e2-f6c4-4aba-9aa1-9648c8842102",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "c770a658-63f7-462a-a161-e60b78eb34be",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "a466fb5e-c8e6-4d79-bf91-061c3028ca5f",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "a8dfae97-9298-4ea4-83e4-52e45b5bbfc9",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "ad2569fe-147c-4521-929b-df66b4fd15e0",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "1d0d2c66-9ebf-4c69-8404-54d09b8cb132",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "6e5879f1-8a94-476b-b985-fb7dc4b357ac",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "569f4f49-3324-4619-96b9-671bd6b297c4",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "clientOfflineSessionMaxLifespan": "0",
      "oauth2DevicePollingInterval": "600",
      "clientSessionIdleTimeout": "0",
      "parRequestUriLifespan": "60",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5"
    },
    "keycloakVersion": "16.1.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  },
  {
    "id": "IPC",
    "realm": "IPC",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 86400000,
    "accessTokenLifespanForImplicitFlow": 1296000,
    "ssoSessionIdleTimeout": 2592000,
    "ssoSessionMaxLifespan": 864000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "none",
    "registrationAllowed": true,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "users": [
      {
        "id":"fd7b246e-8c51-47e7-98fd-3624fa69d376",
        "username": "admin-catalogue",
        "enabled": true,
        "email": "admin-catalogue@test.com",
        "firstName": "admin-catalogue",
        "lastName": "admin-catalogue",
        "credentials": [
          {
            "type": "password",
            "value": "admin-catalogue"
          }
        ],
        "realmRoles": [
          "app-admin" 
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id":"7d7a7795-9e58-4c84-92c2-7944fcfd3a26",
        "username": "dac-manager",
        "enabled": true,
        "email": "dac-manager@test.com",
        "firstName": "dac-manager",
        "lastName": "dac-manager",
        "credentials": [
          {
            "type": "password",
            "value": "dac-manager"
          }
        ],
        "realmRoles": [
          "app-dac-manager" 
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id":"fa111014-1635-4708-b262-e8f6913d4bdb",
        "username": "dac-admin",
        "enabled": true,
        "email": "dac-admin@test.com",
        "firstName": "dac-admin",
        "lastName": "dac-admin",
        "credentials": [
          {
            "type": "password",
            "value": "dac-admin"
          }
        ],
        "realmRoles": [
          "app-user", 
          "app-dac-admin"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id":"b9716083-b4c9-48f3-aae1-db81190aae81",
        "username": "dac-admin-1",
        "enabled": true,
        "email": "dac-admin1@test.com",
        "firstName": "dac-admin-1",
        "lastName": "dac-admin-1",
        "credentials": [
          {
            "type": "password",
            "value": "dac-admin-1"
          }
        ],
        "realmRoles": [
          "app-user", 
          "app-dac-admin"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id":"a7be0c73-6062-4f0e-b222-032036464519",
        "username": "dac-admin-2",
        "enabled": true,
        "email": "dac-admin2@test.com",
        "firstName": "dac-admin-2",
        "lastName": "dac-admin-2",
        "credentials": [
          {
            "type": "password",
            "value": "dac-admin-2"
          }
        ],
        "realmRoles": [
          "app-user", 
          "app-dac-admin"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id":"b4ae0219-2e96-45b3-a889-3d7e08d2a669",
        "username": "dac-admin-3",
        "enabled": true,
        "email": "dac-admin3@test.com",
        "firstName": "dac-admin-3",
        "lastName": "dac-admin-3",
        "credentials": [
          {
            "type": "password",
            "value": "dac-admin-3"
          }
        ],
        "realmRoles": [
          "app-user", 
          "app-dac-admin"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "e245800c-f2f5-4762-a959-cba326b71ef1",
        "username": "dac-member",
        "enabled": true,
        "email": "dac-member@test.com",
        "firstName": "dac-member",
        "lastName": "dac-member",
        "credentials": [
          {
            "type": "password",
            "value": "dac-member"
          }
        ],
        "realmRoles": [
          "app-user",
          "app-dac-member"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "2a32de1e-8da9-4222-a824-549bf632544b",
        "username": "dac-member-1",
        "enabled": true,
        "email": "dac-member1@test.com",
        "firstName": "dac-member-1",
        "lastName": "dac-member-1",
        "credentials": [
          {
            "type": "password",
            "value": "dac-member-1"
          }
        ],
        "realmRoles": [
          "app-user",
          "app-dac-member"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "9589c46d-a146-43b3-a1a5-6e21abc886e6",
        "username": "dac-member-2",
        "enabled": true,
        "email": "dac-member2@test.com",
        "firstName": "dac-member-2",
        "lastName": "dac-member-2",
        "credentials": [
          {
            "type": "password",
            "value": "dac-member-2"
          }
        ],
        "realmRoles": [
          "app-user",
          "app-dac-member"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "ef1701ab-5a17-4e50-8e45-596442dfb547",
        "username": "dac-member-3",
        "enabled": true,
        "email": "dac-member3@test.com",
        "firstName": "dac-member-3",
        "lastName": "dac-member-3",
        "credentials": [
          {
            "type": "password",
            "value": "dac-member-3"
          }
        ],
        "realmRoles": [
          "app-user",
          "app-dac-member"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "42a55fa0-18e9-482b-8619-3d7caa757ac9",
        "username": "user-1",
        "enabled": true,
        "email": "user1@test.com",
        "firstName": "user-1",
        "lastName": "user-1",
        "credentials": [
          {
            "type": "password",
            "value": "user-1"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id":"03a81603-725d-4fec-b7cd-be466f2dc62c",
        "username": "user-2",
        "enabled": true,
        "email": "user2@test.com",
        "firstName": "user-2",
        "lastName": "user-2",
        "credentials": [
          {
            "type": "password",
            "value": "user-2"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "f8e8edc5-11e6-4bd7-80ac-157e9c4a2582",
        "username": "user-3",
        "enabled": true,
        "email": "user3@test.com",
        "firstName": "user-3",
        "lastName": "user-3",
        "credentials": [
          {
            "type": "password",
            "value": "user-3"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "09264173-d07c-4de3-bdfc-04928da9aee8",
        "username": "demo-user-1",
        "enabled": true,
        "email": "demo1@test.com",
        "firstName": "demo-user-1",
        "lastName": "demo-user-1",
        "credentials": [
          {
            "type": "password",
            "value": "demo-user-1"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "97038f24-52ba-451e-adac-fa79f437d4af",
        "username": "demo-user-2",
        "enabled": true,
        "email": "demo2@test.com",
        "firstName": "demo-user-2",
        "lastName": "demo-user-2",
        "credentials": [
          {
            "type": "password",
            "value": "demo-user-2"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "e925f628-71c7-4625-bf8e-917b69fb2656",
        "username": "demo-user-3",
        "enabled": true,
        "email": "demo3@test.com",
        "firstName": "demo-user-3",
        "lastName": "demo-user-3",
        "credentials": [
          {
            "type": "password",
            "value": "demo-user-3"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "3faa7ab8-d889-4b89-ae79-991057da7d0f",
        "username": "demo-user-4",
        "enabled": true,
        "email": "demo4@test.com",
        "firstName": "demo-user-4",
        "lastName": "demo-user-4",
        "credentials": [
          {
            "type": "password",
            "value": "demo-user-4"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "c825c0b6-7199-483b-8d74-52152fee524a",
        "username": "demo-user-5",
        "enabled": true,
        "email": "demo5@test.com",
        "firstName": "demo-user-5",
        "lastName": "demo-user-5",
        "credentials": [
          {
            "type": "password",
            "value": "demo-user-5"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "b0b53de3-c6c9-491c-ab4c-f521cc9f48c5",
        "username": "demo-user-6",
        "enabled": true,
        "email": "demo6@test.com",
        "firstName": "demo-user-6",
        "lastName": "demo-user-6",
        "credentials": [
          {
            "type": "password",
            "value": "demo-user-6"
          }
        ],
        "realmRoles": [
          "app-user"
        ],
        "clientRoles": {
          "account": [
            "view-profile",
            "manage-account"
          ]
        }
      },
      {
        "id": "2f7739f7-15ea-45b9-a1ca-0b1ba1abf45e",
        "createdTimestamp": 1647507891728,
        "username": "service-account-dac-management",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "dac-management",
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-ipc"
        ],
        "clientRoles": {
          "dac-management": [
            "uma_protection"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "3a7d7227-d0ff-4c21-9796-0be123d6724f",
        "createdTimestamp": 1636461282718,
        "username": "service-account-dac-portal-api",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "dac-portal-api",
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-ipc"
        ],
        "clientRoles": {
          "dac-portal-api": [
            "uma_protection"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "8e6f13b2-13e8-4799-b5c7-b54e9a32528c",
        "createdTimestamp": 1637412821091,
        "username": "service-account-ipc-outbox-api",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "ipc-outbox-api",
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-ipc"
        ],
        "clientRoles": {
          "ipc-outbox-api": [
            "uma_protection"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "7cfbf7b0-46d1-4daf-ae70-47e758af4706",
        "createdTimestamp": 1636130514121,
        "username": "service-account-permissions-api",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "serviceAccountClientId": "permissions-api",
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-ipc"
        ],
        "clientRoles": {
          "permissions-api": [
            "uma_protection"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "roles": {
      "realm": [
        {
          "id": "aa78a5b5-bf80-4d47-8792-8a5176d58eb9",
          "name": "default-roles-ipc",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization",
              "app-user"
            ],
            "client": {
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          "clientRole": false,
          "containerId": "IPC",
          "attributes": {}
        },
        {
          "id": "53211600-1208-4973-9ff5-69c17f5d4d6d",
          "name": "app-dac-manager",
          "composite": false,
          "clientRole": false,
          "containerId": "IPC",
          "attributes": {}
        },
        {
          "id": "48a5c07f-b008-451b-b152-9e7513653d35",
          "name": "app-dac-admin",
          "composite": true,
          "composites": {
            "client": {
              "permissions-api": [
                "is-dac",
                "dac-admin"
              ],
              "dac-portal-api": [
                "dac-admin",
                "is-dac"
              ]
            }
          },
          "clientRole": false,
          "containerId": "IPC",
          "attributes": {}
        },
        {
          "id": "84ecaf65-4ec0-482e-b988-a3e00df57de2",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "IPC",
          "attributes": {}
        },
        {
          "id": "5473807a-3360-41dc-94c1-fd49d92e7a02",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "IPC",
          "attributes": {}
        },
        {
          "id": "cede8780-5818-45f4-b836-9fc26675eba7",
          "name": "app-admin",
          "composite": true,
          "composites": {
            "client": {
              "ipc-outbox-api": [
                "user"
              ]
            }
          },
          "clientRole": false,
          "containerId": "IPC",
          "attributes": {}
        },
        {
          "id": "2fa8641b-13e8-4803-9290-7655817b24af",
          "name": "app-dac-member",
          "composite": true,
          "composites": {
            "client": {
              "permissions-api": [
                "is-dac",
                "dac-member"
              ],
              "dac-portal-api": [
                "dac-member",
                "is-dac"
              ]
            }
          },
          "clientRole": false,
          "containerId": "IPC",
          "attributes": {}
        },
        {
          "id": "fd73cf8c-1ad9-469f-81da-c91c5edf5680",
          "name": "app-user",
          "composite": true,
          "composites": {
            "client": {
              "dac-portal-api": [
                "user"
              ],
              "permissions-api": [
                "user"
              ],
              "ipc-outbox-api": [
                "user"
              ]
            }
          },
          "clientRole": false,
          "containerId": "IPC",
          "attributes": {}
        }
      ],
      "client": {
        "dac-portal-api": [
          {
            "id": "cc998489-5a02-47e6-a367-f8454bc47eda",
            "name": "dac-member",
            "composite": false,
            "clientRole": true,
            "containerId": "72b0d526-dc0b-4d5c-9e62-0f795bc205f4",
            "attributes": {}
          },
          {
            "id": "0a2d1795-6b0f-4d1d-ac9e-dadb215240b9",
            "name": "user",
            "composite": false,
            "clientRole": true,
            "containerId": "72b0d526-dc0b-4d5c-9e62-0f795bc205f4",
            "attributes": {}
          },
          {
            "id": "7819ccd1-1c4b-43e4-a393-7185ed97705a",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "72b0d526-dc0b-4d5c-9e62-0f795bc205f4",
            "attributes": {}
          },
          {
            "id": "642625a6-fd9d-42f0-a6c8-6f8d3566c551",
            "name": "dac-admin",
            "composite": false,
            "clientRole": true,
            "containerId": "72b0d526-dc0b-4d5c-9e62-0f795bc205f4",
            "attributes": {}
          },
          {
            "id": "a9a2274d-344d-4b5a-ad57-1e28d0e367ad",
            "name": "is-dac",
            "composite": false,
            "clientRole": true,
            "containerId": "72b0d526-dc0b-4d5c-9e62-0f795bc205f4",
            "attributes": {}
          }
        ],
        "permissions-api": [
          {
            "id": "45a74d41-5996-4e36-a6ca-74c790b02eab",
            "name": "is-dac",
            "composite": false,
            "clientRole": true,
            "containerId": "306f7f95-2e93-49eb-b78a-710ea83621a2",
            "attributes": {}
          },
          {
            "id": "d20421d0-a184-4efd-99fd-e87a52228516",
            "name": "dac-member",
            "composite": false,
            "clientRole": true,
            "containerId": "306f7f95-2e93-49eb-b78a-710ea83621a2",
            "attributes": {}
          },
          {
            "id": "c3c15f0f-c7ee-458a-baba-eff830140232",
            "name": "dac-admin",
            "composite": false,
            "clientRole": true,
            "containerId": "306f7f95-2e93-49eb-b78a-710ea83621a2",
            "attributes": {}
          },
          {
            "id": "c8454fa4-4328-4776-b433-9cad6ff9d83c",
            "name": "user",
            "composite": false,
            "clientRole": true,
            "containerId": "306f7f95-2e93-49eb-b78a-710ea83621a2",
            "attributes": {}
          },
          {
            "id": "27e248e0-2521-4723-aa76-35aabb6fe988",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "306f7f95-2e93-49eb-b78a-710ea83621a2",
            "attributes": {}
          }
        ],
        "realm-management": [
          {
            "id": "1ccd80bc-52fc-4fec-9324-6b7f70fd8ae2",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "view-clients",
                  "query-realms",
                  "view-events",
                  "manage-events",
                  "create-client",
                  "manage-clients",
                  "manage-users",
                  "view-authorization",
                  "query-groups",
                  "query-clients",
                  "view-identity-providers",
                  "query-users",
                  "manage-identity-providers",
                  "view-realm",
                  "impersonation",
                  "manage-realm",
                  "manage-authorization",
                  "view-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "7cadce9c-4abb-486a-a2ee-8a4c32d4a46b",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "2d7e75f2-aa90-47bd-bcb8-0cdef82ad7ce",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "2f4c27ec-0538-4ecf-8488-cc3e31a58fd5",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "d89f6366-c5d9-4ae8-b727-ac78901db68e",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "ad5d40b3-3236-4fa7-991b-b5ef29bf0e15",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "181cbbfd-8e7a-4036-9b49-bddcb593a88e",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "62caaec7-803d-4bfc-80f6-fcf65fe4f7f5",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "d8dd7e36-85c6-4eda-b815-96a74dcc0514",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "4808bc74-3081-461f-b3f2-7d906a0a71f1",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "d426ee79-843c-455a-a15c-54700eecee33",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "e86d51a1-da8d-4544-b3bb-9cb643dea700",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "0527ae7f-ab19-4907-b28d-3dd230623426",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "15bcc00f-ad2f-4a76-be3f-5dd23e7f741a",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "15e16f3c-ed4e-4629-8395-1e1b1fc6d421",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "9f08db9c-e086-45eb-8b78-cbf52ad2c3b1",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "2070b920-39c8-4f75-a09a-c0a7032965e3",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "fdbabc52-3dff-4267-a9d6-5da775f4a5c3",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          },
          {
            "id": "046f2df1-eba4-4047-ae38-996b190d240f",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "c09f2527-5e90-4424-ac61-9ece0abddad3",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "dac-portal": [],
        "admin-cli": [],
        "ipc-react-portal": [],
        "account-console": [],
        "broker": [
          {
            "id": "d196d51a-a849-4dba-9bf5-9fabdd3cda7a",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a9d1d2-40a6-4b6f-b41c-ba7c09460aba",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "4ce3236e-a80a-4f0c-af7e-8c3a517d8394",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "4a65ec0b-c645-475f-b5ac-e5f71fa2ae69",
            "attributes": {}
          },
          {
            "id": "3fa0be90-52ef-4d75-bd0f-96198b608420",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "4a65ec0b-c645-475f-b5ac-e5f71fa2ae69",
            "attributes": {}
          },
          {
            "id": "2d68b986-17ce-47ec-af7f-434f183b81af",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "4a65ec0b-c645-475f-b5ac-e5f71fa2ae69",
            "attributes": {}
          },
          {
            "id": "424b1c38-395b-4316-878c-7cca9b0bd3dc",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "4a65ec0b-c645-475f-b5ac-e5f71fa2ae69",
            "attributes": {}
          },
          {
            "id": "72041025-e063-4165-bab0-b20497d502fc",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "4a65ec0b-c645-475f-b5ac-e5f71fa2ae69",
            "attributes": {}
          },
          {
            "id": "89d20354-782a-4cf2-b2f5-d3283dce0cf3",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "4a65ec0b-c645-475f-b5ac-e5f71fa2ae69",
            "attributes": {}
          },
          {
            "id": "962ad408-5f3d-4052-86c3-8e74bc93e78c",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "4a65ec0b-c645-475f-b5ac-e5f71fa2ae69",
            "attributes": {}
          }
        ],
        "ipc-outbox-api": [
          {
            "id": "fc19fd21-b8e2-4682-ae72-fdee2c534ece",
            "name": "user",
            "composite": false,
            "clientRole": true,
            "containerId": "718803bc-8ffe-4a05-b80b-949283049b82",
            "attributes": {}
          },
          {
            "id": "1e499a0c-4ffa-4f10-a619-d13c45869b84",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "718803bc-8ffe-4a05-b80b-949283049b82",
            "attributes": {}
          }
        ],
        "dac-management": [
          {
            "id": "8c88b6e3-fb97-4a84-a9ca-25f0803d8019",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "b006bab6-6f4f-43d1-af2f-8b64eb35df8f",
            "attributes": {}
          },
          {
            "id": "ee0d7985-c62a-4c7b-89fc-afc8af766f14",
            "name": "dac-manager",
            "composite": false,
            "clientRole": true,
            "containerId": "b006bab6-6f4f-43d1-af2f-8b64eb35df8f",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "aa78a5b5-bf80-4d47-8792-8a5176d58eb9",
      "name": "default-roles-ipc",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "IPC"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "4a65ec0b-c645-475f-b5ac-e5f71fa2ae69",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/IPC/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/IPC/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "permissions-api-mapper",
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "ee9eecb5-01c9-40cc-a7ad-c9a0454dbae5",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/IPC/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/IPC/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "3b2be028-17ed-4532-bd42-9ceb29bf9f24",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "96555d5c-1e4d-4cd0-98c5-fd27d4aa9a3a",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "daa9dc27-f747-4f83-ad2c-9aa933c61b0a",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "67a9d1d2-40a6-4b6f-b41c-ba7c09460aba",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "b006bab6-6f4f-43d1-af2f-8b64eb35df8f",
        "clientId": "dac-management",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "3046a5d4-610f-4847-8b9a-50a5269d8366",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "571ae743-2a7b-4419-983f-48e5fa422388",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "83211e4c-1dab-4c56-bc67-229441342483",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "47469d66-3152-4c5d-a810-1f957e899d66",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Default Resource",
              "type": "urn:dac-management:resources:default",
              "ownerManagedAccess": false,
              "attributes": {},
              "_id": "fe643274-f709-4f5c-9bde-8b50f76da648",
              "uris": [
                "/*"
              ]
            }
          ],
          "policies": [
            {
              "id": "d0d31087-db1c-443b-a841-44d1005b234f",
              "name": "Default Policy",
              "description": "A policy that grants access only for users within this realm",
              "type": "js",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "config": {
                "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
              }
            },
            {
              "id": "69c5316c-8584-47aa-97f5-d6118336d62b",
              "name": "Default Permission",
              "description": "A permission that applies to the default resource type",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "defaultResourceType": "urn:dac-management:resources:default",
                "applyPolicies": "[\"Default Policy\"]"
              }
            }
          ],
          "scopes": [],
          "decisionStrategy": "UNANIMOUS"
        }
      },
      {
        "id": "0ca2f87a-4439-42cd-8905-c544558f4dbe",
        "clientId": "dac-portal",
        "rootUrl": "",
        "adminUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "dac:roles",
          "web-origins",
          "dac:members",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "72b0d526-dc0b-4d5c-9e62-0f795bc205f4",
        "clientId": "dac-portal-api",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "cda4f15b-c430-4690-bb2e-c89150c424d4",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "5acb6c2f-27eb-42c2-bc66-be560fe4727f",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6cee600d-c5de-4794-8eb9-050e4f29d9d2",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          },
          {
            "id": "711037e7-879a-4d6f-8ffe-85e57c24f28e",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Default Resource",
              "type": "urn:dac-portal-api:resources:default",
              "ownerManagedAccess": false,
              "attributes": {},
              "_id": "6ef1084d-6f98-4d00-a28d-0031ba315250",
              "uris": [
                "/*"
              ]
            }
          ],
          "policies": [
            {
              "id": "44db065e-8ad2-4de8-ad23-a02acd39f109",
              "name": "Default Policy",
              "description": "A policy that grants access only for users within this realm",
              "type": "js",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "config": {
                "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
              }
            },
            {
              "id": "302d8867-a05f-4b81-ae2b-2d8440f97956",
              "name": "Default Permission",
              "description": "A permission that applies to the default resource type",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "defaultResourceType": "urn:dac-portal-api:resources:default",
                "applyPolicies": "[\"Default Policy\"]"
              }
            }
          ],
          "scopes": [],
          "decisionStrategy": "UNANIMOUS"
        }
      },
      {
        "id": "718803bc-8ffe-4a05-b80b-949283049b82",
        "clientId": "ipc-outbox-api",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "f14d6d20-a546-47f5-a698-3fcd7cfc6ec4",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "14b994f1-230e-4b62-b71c-ab76a4dc733d",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ff10865c-736b-4ec7-8f0d-ec04d389c335",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d1e2154c-2a39-4509-9247-9165e8505d50",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Default Resource",
              "type": "urn:outbox-api:resources:default",
              "ownerManagedAccess": false,
              "attributes": {},
              "_id": "ec2af92b-fd1b-45f3-bf5b-317d4004570b",
              "uris": [
                "/*"
              ]
            }
          ],
          "policies": [
            {
              "id": "baedac99-0989-4d41-9ec8-267ef6b1c673",
              "name": "Default Policy",
              "description": "A policy that grants access only for users within this realm",
              "type": "js",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "config": {
                "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
              }
            },
            {
              "id": "5533adbd-0614-469a-9b83-191d1d06a2df",
              "name": "Default Permission",
              "description": "A permission that applies to the default resource type",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "defaultResourceType": "urn:outbox-api:resources:default",
                "applyPolicies": "[\"Default Policy\"]"
              }
            }
          ],
          "scopes": [],
          "decisionStrategy": "UNANIMOUS"
        }
      },
      {
        "id": "d12b90d0-9c1e-49e8-9b73-120edcc8b99d",
        "clientId": "ipc-react-portal",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "require.pushed.authorization.requests": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "permissions-api-mapper",
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "306f7f95-2e93-49eb-b78a-710ea83621a2",
        "clientId": "permissions-api",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "fd06bf6a-0a54-4c82-ba16-d122469408cf",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "authorizationServicesEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "id.token.as.detached.signature": "false",
          "saml.assertion.signature": "false",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "exclude.session.state.from.auth.response": "false",
          "oidc.ciba.grant.enabled": "false",
          "saml.artifact.binding": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml_force_name_id_format": "false",
          "require.pushed.authorization.requests": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "6a6c98e8-7b33-4dbd-ac87-16052e059d2b",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "b800b53d-48e6-444e-ad01-aedbed55db66",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "bfc011c2-62ff-43ad-8c92-fb21c1ebeb5a",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientId",
              "userinfo.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientId",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ],
        "authorizationSettings": {
          "allowRemoteResourceManagement": true,
          "policyEnforcementMode": "ENFORCING",
          "resources": [
            {
              "name": "Default Resource",
              "type": "urn:permissions-api:resources:default",
              "ownerManagedAccess": false,
              "attributes": {},
              "_id": "941c2769-fb76-494d-8684-496ce4eb1e96",
              "uris": [
                "/*"
              ]
            }
          ],
          "policies": [
            {
              "id": "72d3beec-8321-4f43-aae0-690b71c16313",
              "name": "Default Policy",
              "description": "A policy that grants access only for users within this realm",
              "type": "js",
              "logic": "POSITIVE",
              "decisionStrategy": "AFFIRMATIVE",
              "config": {
                "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
              }
            },
            {
              "id": "3aab8e8f-cf0b-460e-aada-0214571c3e21",
              "name": "Default Permission",
              "description": "A permission that applies to the default resource type",
              "type": "resource",
              "logic": "POSITIVE",
              "decisionStrategy": "UNANIMOUS",
              "config": {
                "defaultResourceType": "urn:permissions-api:resources:default",
                "applyPolicies": "[\"Default Policy\"]"
              }
            }
          ],
          "scopes": [],
          "decisionStrategy": "UNANIMOUS"
        }
      },
      {
        "id": "c09f2527-5e90-4424-ac61-9ece0abddad3",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c6a60226-143c-4686-ab12-44433161742f",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/IPC/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/IPC/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "3a160f45-fc4a-42ae-9ff8-22a4890d1ca3",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "0b9b8ac7-75bb-432d-9d00-3d342c584568",
        "name": "dac:roles",
        "description": "mongo mapper for DAC roles",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "31c4c258-ea3d-4eed-b2d6-7ff43355f6aa",
            "name": "mongo mapper for DAC-roles",
            "protocol": "openid-connect",
            "protocolMapper": "mongodb-scope-mapper",
            "consentRequired": false,
            "config": {
              "mongodb-query-text": "{\naggregate: \"userRoles\",\npipeline: \n[{\n    $match: {\n        \"sub\": \"$$sub\"\n    }\n}, {\n    $group: {\n        \"_id\": null,\n        \"dac:roles\": {\n            $push: \"$$ROOT.roles\"\n        }\n    }\n}, {\n    $project: {\n        \"_id\": 0,\n        \"dac:roles\": 1\n    }\n}]\n}",
              "mongodb-connection-uri": "mongodb://admin:password@172.21.0.1:27017/dac-portal-api?authSource=admin"
            }
          }
        ]
      },
      {
        "id": "25cc9dc0-6b2f-4db2-8add-2a81607bb0c3",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "992c20e6-936a-4ea1-8e9f-b8f77441b781",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "1ab2674f-fcdb-4f86-af91-71d28a4ef4ea",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "f21cf9a8-8b4c-42a8-a0de-5326b3bbff3b",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "98f2f935-407b-4003-ab89-f3b412fabf50",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5e0d4eae-02a8-40b9-ad32-0209a3c2c239",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "5b3575f6-8a9b-4fde-9e66-cc8a3fab3109",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "eaea9f35-b713-44e0-a3e6-b8be0d68c63f",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "d5f19e42-bfc0-4a99-8bd4-83ef67e91a56",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "536a50a9-eb17-45a9-a3af-82625e65e6a4",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "3967a9ae-cdad-4f94-9ca2-462802f27544",
        "name": "permissions-api-mapper",
        "description": "jjj",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "67be1871-5b90-46cb-94e8-098da9dae185",
            "name": "permissions-bsc",
            "protocol": "openid-connect",
            "protocolMapper": "permissions-api-ga4gh-passport-mapper",
            "consentRequired": false,
            "config": {
              "permissions-api-plain-visas": "true",
              "permissions-api-endpoint-uri": "http://172.21.0.11:8081"
            }
          }
        ]
      },
      {
        "id": "6c569107-f26f-462c-a293-75379c022b77",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "8901eaf5-f33e-4756-80ae-24e361f7a51a",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2bd2552c-fcea-4928-b7ca-d39c397f5676",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "853ddacc-e38b-459a-95ea-779b9d7dbdb4",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ed330831-4abd-469f-a4f7-ea9964e807e2",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1af9d2ad-45da-4651-b39e-479a502f73e2",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d0da4c4f-216a-44a7-974a-6f018742ca18",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "98db4f73-9091-49a0-a6ce-43acc4a95647",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "6d35bfd3-7507-4bab-b5a2-c05d1a71c252",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "315b4dd6-309e-4afa-a85f-e9ac7a61c041",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "de9a9763-3464-49e3-ae89-bf804fd32e2c",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "96246e1d-4c9b-4bd3-ba1e-547fe5580be2",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3f98f7dc-fab8-4c97-89a3-42db3ba187d2",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "9c82cb90-372e-4eac-a218-a86fca01ce54",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e2a58acf-35f2-4f6a-903d-d235dc0840f2",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "78b8c86b-686c-4c92-9414-7c423d8355df",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "04f67d5b-2422-47aa-9a65-eeb08a8c670a",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "7b4f2d92-1e72-4593-abfd-972f22be4c89",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "a219f206-da37-4992-a1af-5f7f47954a19",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "848c5463-f2ca-40e0-9c2b-7f5f57065dfb",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "69461986-14f5-408f-a5b6-aab5ba9a8a91",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "2be24c16-9005-4c53-80f9-6b6e2122ae98",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "e09a31c9-6efa-4ca0-ab1f-5618ad0e0564",
        "name": "dac:members",
        "description": "mongo-mapper-dac-members",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "5818ce48-fd8f-4417-bfa0-da69dfd9f06d",
            "name": "dac members mapper",
            "protocol": "openid-connect",
            "protocolMapper": "mongodb-scope-mapper",
            "consentRequired": false,
            "config": {
              "mongodb-query-text": "{\naggregate: \"dacs\",\npipeline: \n[{\n    $match: {\n        \"members\": \"$$sub\"\n    }\n}, {\n    $group: {\n        \"_id\": null,\n        \"dac:members\": {\n            $push: \"$$ROOT.files.acl\"\n        }\n    }\n}, {\n    $project: {\n        \"_id\": 0,\n        \"dac:members\": 1\n    }\n}]\n}",
              "mongodb-connection-uri": "mongodb://admin:password@172.21.0.1:27017/dac-portal-api?authSource=admin"
            }
          }
        ]
      },
      {
        "id": "767fcb65-a706-4424-93f0-845ebc23b4d0",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "cf4cdbfd-be75-485e-be10-aaa0d5d97e84",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e9b27291-3b02-40f9-ba21-92cb5c5cd44d",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "839cbd12-f3cc-4651-8710-3cd067220eeb",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "12fcdd73-a6ad-47c7-8959-e221255f2455",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "825c3f7f-3869-4dc9-a2cb-4418615e693e",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "3ccea40f-84ef-4e35-8c68-5ceb9890f848",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "saml-user-property-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "349bfa9e-c0d2-47f3-b2af-5b44e6f36cfd",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "8d692806-b633-4e35-92d3-7b85be0d4c11",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "7ee8abdb-36ae-4e4c-bbd5-7fa8404df143",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper"
            ]
          }
        },
        {
          "id": "d0381cfa-07bf-42f8-a6fe-33baa7ba2f9b",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "e878c6c7-87ad-4888-809c-b8560679209c",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "2fefd709-2665-4a0f-ae06-6d944da7b2c2",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "a8c8d7d7-b716-4a97-bf92-8bf9cdec1702",
          "name": "rsa-enc-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "454cab91-2370-4a0e-ae51-9e640f939fb5",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "123f54e5-f7bf-4606-9e29-698783d3b232",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "829ecdbf-17fc-4c20-be02-f8e1a4bbbbcb",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "12e2e3c2-fff8-40d0-a15f-1147aa7f46d6",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "1122cad5-9aa5-4bd2-9cff-0ac857c39e2b",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "a1fa35db-2031-49ba-8158-8ae0ff396a64",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "11695ab3-8611-4b32-b755-6a8590830860",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "14afc6ce-1b00-47db-a17a-8f361ee21a5f",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "c630e632-be37-4e26-ac09-1991f216927f",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "321b6bea-d023-47bb-9b84-989446ef8086",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "039b85fd-30e3-4659-9f57-b8ad2f389f2c",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "4564b1ff-9560-4cbc-8187-c1ebf3ba8963",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "3f669366-c43d-4196-bf82-cb1b99d22b80",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "176b974e-0844-4db0-9860-552e2a1b5d6d",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "1da3680f-1c26-420f-ad35-d917712b8b16",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "048e8839-ba37-47cb-b100-8a11dec3347d",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "5dbd93cf-0bac-41be-93bf-0a5071d81306",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "33cfda36-bb12-4059-90eb-bd7f2c43fb4a",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "cf7c4e4f-96a0-48a5-a5d4-aa7132826273",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "cb4805f7-bcf1-42aa-9411-3d0e89014fce",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "6bd38dd3-64e4-4114-9130-2f6e88f1b5a5",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "2692fb5f-5471-477e-87fd-a41d7929c05b",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "7a1ce63a-effa-455b-bb89-a21c7e687019",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "453ad417-8f6f-4830-8a6c-06a0ed92cca6",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "clientOfflineSessionMaxLifespan": "0",
      "oauth2DevicePollingInterval": "5",
      "clientSessionIdleTimeout": "0",
      "parRequestUriLifespan": "60",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5"
    },
    "keycloakVersion": "16.1.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
  ]